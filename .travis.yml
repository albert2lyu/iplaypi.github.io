# 使用语言
language: node_js
# node版本
node_js: stable
# 设置只监听哪个分支
branches:
  only:
  - source
# 缓存,可以节省集成的时间,这里用了yarn,如果不用可以删除
cache:
  apt: true
  yarn: true
  directories:
    - node_modules
    - CNAME
# 全局变量
env:
 global:
   - GITHUB_URL: github.com/iplaypi/iplaypi.github.io.git
# tarvis生命周期执行顺序详见官网文档
before_install:
# 更改时区
- export TZ='Asia/Shanghai'
- git config --global user.name "iplaypi"
- git config --global user.email "1305098770@qq.com"
# 由于使用了yarn,所以需要下载,不用yarn这两行可以删除
- curl -o- -L https://yarnpkg.com/install.sh | bash
- export PATH=$HOME/.yarn/bin:$PATH
- npm install -g hexo-cli
install:
# 不用yarn的话这里改成 npm i 即可
- yarn
script:
- hexo clean
- hexo generate
after_success:
# - cd ./public
# 复制必须的配置文件
# - cp ../_config.yml ../README.md ../.gitignore ../CNAME ./
# - git init
# - git add --all
# - git commit -m "Travis CI Auto Builder"
# 这里的 REPO_TOKEN 即之前在 travis 项目的环境变量里添加的
# - git push --quiet --force https://$REPO_TOKEN@github.com/iplaypi/iplaypi.github.io.git
#  master

# 获取master分支内容
- git clone https://${GITHUB_URL} .deploy_git
- cd .deploy_git
- git checkout master
- cp -rf ../public/* ./
# 必要配置文件
- cp -rf ../_config.yml ../README.md ../.gitignore ../CNAME ./
- git add .
# 提交记录包含时间 跟上面更改时区配合
- git commit -m "Travis CI Auto Builder at `date +"%Y-%m-%d %H:%M"`"
# 推送到主分支
- git push --force --quiet "https://${REPO_TOKEN}@${GITHUB_URL}" master:master

# 邮件通知机制
# configure notifications (email, IRC, campfire etc)
# please update this section to your needs!
# https://docs.travis-ci.com/user/notifications/
notifications:
  email:
    - 1305098770@qq.com
    - pengfei@hudongpai.com
  on_success: change
  on_failure: always
