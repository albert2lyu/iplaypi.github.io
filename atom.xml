<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>虾丸派</title>
  
  <subtitle>烂笔头</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.playpi.org/"/>
  <updated>2018-11-20T16:53:13.000Z</updated>
  <id>https://www.playpi.org/</id>
  
  <author>
    <name>playpi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo 博客静态资源压缩优化</title>
    <link href="https://www.playpi.org/2018112101.html"/>
    <id>https://www.playpi.org/2018112101.html</id>
    <published>2018-11-20T16:53:13.000Z</published>
    <updated>2018-11-20T16:53:13.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --><p>使用 hexo-cli 生成的静态网页 html 文件，使用文本编辑器打开，可以看到内容中有大量的回车换行等空白符。尽管是空白符，但是也占据着空间大小，而且那么多，导致 html 文件偏大，网页加载时不仅浪费流量，而且还影响速度。同时，最重要的是对于手机端来说，静态页面 html 文件太大了的确不友好。所以要做优化，用术语说是压缩，其实目的就是在生成 html 文件时，尽量去除内容中多余的空白符，减小 html 文件的大小。此外，顺便也把 css 文件、js 文件一起压缩了。</p><a id="more"></a><h1 id="当前现象"><a href="# 当前现象" class="headerlink" title="当前现象"></a>当前现象 </h1><p> 为了简单起见，只是列举 html 文件来看现象，目前查看生成的 8 个 html 静态页面（为了具有对比性，不包含当前页面），大小为 314 K。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxg5iuthmbj20sr0guta4.jpg" alt="8 个 html 文件" title="8 个 html 文件"></p><p>打开其中一个 html 文件查看内容，可以看到很多回车换行符。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxg5kn3bz2j20u00iidgy.jpg" alt="连续多个回车换行符" title="连续多个回车换行符"></p><p>接下来就是要想办法消除这些空白符。</p><h1 id="压缩方式选择"><a href="# 压缩方式选择" class="headerlink" title="压缩方式选择"></a>压缩方式选择 </h1><p> 通过查看 hexo 官网（附上插件库：<a href="https://hexo.io/plugins/" target="_blank" rel="noopener">hexo 插件库 </a>），搜索资料了解别人的例子，发现有两种方式：</p><ul><li> 一种是先全局（-g 参数）安装 gulp 模块，根据压缩需求再安装需要的模块，例如 gulp-htmlclean、gulp-htmlmin、gulp-imagemin、gulp-minify-css、gulp-uglify，每个模块都有自己的功能，另外需要单独配置一个 js 脚本（放在站点根目录下），指明使用的模块，文件所在目录或者通配符文件名，然后每次使用 hexo generate 之后再使用 gulp 就可以压缩文件了。这种方式灵活度高，可以自定义，而且 gulp 的功能与 hexo 解耦，如果有其它静态文件，也可以使用 gulp 进行压缩。但是缺点也显而易见，门槛太高了，根据我的折腾经验，如果出了问题肯定要捣鼓半天，对于我这种零基础的人来说不够友好，我不选择；</li><li>另一种是类似于 hexo 的一个插件，像其它插件或者主题一样，直接安装一个模块，在配置文件中配置你想要的压缩内容，在 hexo generate 的时候就可以实现压缩，无需关心具体流程，也不用配置什么脚本，非常容易，我选择这个，目前我看到有两个类似的插件：<a href="https://github.com/rozbo/hexo-neat" target="_blank" rel="noopener">hexo-neat</a>、<a href="https://github.com/mamboer/hexo-filter-cleanup" target="_blank" rel="noopener">hexo-filter-cleanup</a>，用法都差不多，我选择前者，其实这些插件也是依赖于其它插件，把多种插件的功能整合在一起而已。</li></ul><h1 id="安装配置"><a href="# 安装配置" class="headerlink" title="安装配置"></a>安装配置 </h1><p>hexo-neat 插件其实是使用 HTMLMinifier、clean-css、UglifyJS 插件实现。</p><p> 安装（由于网络不稳定因素，可能不是一次就成功，可以多试几次）<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure><p></p><p>站点配置 <br> 编辑站点的配置文件 &#95;config.yml，开启对应的属性 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件压缩, 设置一些需要跳过的文件 </span></span><br><span class="line"><span class="comment"># hexo-neat</span></span><br><span class="line">neat_enable: <span class="literal">true</span></span><br><span class="line"><span class="comment"># 压缩 html</span></span><br><span class="line">neat_html:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  exclude:</span><br><span class="line"><span class="comment"># 压缩 css</span></span><br><span class="line">neat_css:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  exclude:</span><br><span class="line">    - <span class="string">'**/*.min.css'</span></span><br><span class="line"><span class="comment"># 压缩 js</span></span><br><span class="line">neat_js:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  mangle: <span class="literal">true</span></span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - <span class="string">'**/*.min.js'</span></span><br><span class="line">    - <span class="string">'**/jquery.fancybox.pack.js'</span></span><br><span class="line">    - <span class="string">'**/index.js'</span></span><br></pre></td></tr></table></figure><h1 id="查看效果"><a href="# 查看效果" class="headerlink" title="查看效果"></a> 查看效果 </h1><p> 在执行 hexo generate 的命令行中就可以看到压缩率输出。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxg6uqzz3aj20gj0ahdgr.jpg" alt="压缩率输出" title="压缩率输出"></p><p>8 个 html 文件被压缩后，大小只有 206 K，和之前的 314 K 比少了 108 K，虽然只是简单的数字，也可以看到压缩效果不错。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxg6y7u1mej20ro0guq49.jpg" alt="8 个文件压缩后" title="8 个文件压缩后"></p><p>继续打开先前打开的那个 html 文件，可以看到整个 html 文档被合并成为了一行文本内容，不影响浏览器对 html 文件的解析展示，回车换行的空白符内容肯定没有了。但是这样对于 html 文件的可读性变差了，最好还是使用一些回车换行符的，还好这些 html 文件我不会去看，能接受目前的效果。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxg743fu8jj20u00igq3g.jpg" alt="html 文件内容合并为一行" title="html 文件内容合并为一行"></p><h1 id="踩坑记录"><a href="# 踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h1><p>1、由于牵涉到压缩文件，所以 hexo 生成静态文件的速度会比以前慢一点，但是可以接受。</p><p>2、不要跳过 .md 文件，也不要跳过 .swig 文件，因为是在 hexo generate 阶段进行压缩的，所以这些文件必须交给 hexo-neat 插件处理，才能保证生成的 html 文件纯净。</p><p>3、参考博客：<a href="https://www.huangzz.xyz/hexo-optimized-file-compression.html" target="_blank" rel="noopener">1</a>、<a href="https://blog.csdn.net/lewky_liu/article/details/82432003" target="_blank" rel="noopener">2</a>、<a href="https://www.ecpeng.com/2018/04/02/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%8E%8B%E7%BC%A9%E4%BC%98%E5%8C%96/" target="_blank" rel="noopener">3</a>、<a href="https://juejin.im/post/5a93c9385188257a84625aad" target="_blank" rel="noopener">4</a>。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;使用 hexo-cli 生成的静态网页 html 文件，使用文本编辑器打开，可以看到内容中有大量的回车换行等空白符。尽管是空白符，但是也占据着空间大小，而且那么多，导致 html 文件偏大，网页加载时不仅浪费流量，而且还影响速度。同时，最重要的是对于手机端来说，静态页面 html 文件太大了的确不友好。所以要做优化，用术语说是压缩，其实目的就是在生成 html 文件时，尽量去除内容中多余的空白符，减小 html 文件的大小。此外，顺便也把 css 文件、js 文件一起压缩了。&lt;/p&gt;
    
    </summary>
    
      <category term="建站" scheme="https://www.playpi.org/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="建站" scheme="https://www.playpi.org/tags/building/"/>
    
      <category term="Hexo" scheme="https://www.playpi.org/tags/Hexo/"/>
    
      <category term="代码压缩" scheme="https://www.playpi.org/tags/%E4%BB%A3%E7%A0%81%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>Google 账号开启两步验证与应用专用密码</title>
    <link href="https://www.playpi.org/2018111901.html"/>
    <id>https://www.playpi.org/2018111901.html</id>
    <published>2018-11-19T13:17:59.000Z</published>
    <updated>2018-11-19T13:17:59.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --><p>使用 Google 账号的都知道，带来了很多方便，不仅有强大的免费搜索服务，还有 Google 文档、云主机、云存储等各种服务，但是唯一的缺点是需要翻墙，让一些人望而却步，把很多人挡在了便利门外。本文是针对已经实现翻墙愿望，并在日常工作中会使用到 Google 账号的人，说不定可以给你带来一些冷知识，解决一些小问题。</p><a id="more"></a><h1 id="Google- 账号的便利性"><a href="#Google- 账号的便利性" class="headerlink" title="Google 账号的便利性"></a>Google 账号的便利性 </h1><p> 目前在日常工作与生活中，查找资料时，基本使用的都是 Google 搜索，并且使用非常好用的 Chrome 浏览器。其中我用的最多就是标签收藏，平时偶尔搜到什么有用的知识点或者需要反复查看的网页，来不及看完整理，就先把网页分类收藏了，以便日后查漏补缺。</p><p>此时，利用 Chrome 浏览器的标签收藏功能，可以很方便地把一切网页收藏起来，并且可以很好地分类存放，清晰明了。可能有人说也有很多其它的工具可以做到这一点，不久收藏吗？但是我觉得还是利用 Chrome 浏览器自带的这个功能比较好，再配合 Google 账号，就可以达到同步更新的效果了，公司的电脑、家里的电脑，只要都登录了 Google 账号，所有收藏的标签都可以实时同步。而且，所有的浏览记录、搜索历史、记住的账号密码等等，都可以同步，跨机器使用也很方便。再配合 Chrome 浏览器的插件，对收藏的网页搜索起来非常方便。</p><h1 id="Google- 账号开启两步验证"><a href="#Google- 账号开启两步验证" class="headerlink" title="Google 账号开启两步验证"></a>Google 账号开启两步验证 </h1><p> 为了安全起见，最好给 Google 账号开启两步验证，可以选择绑定手机号、启用身份验证器、安全密钥等方式，为了方便，我选择了绑定手机号。开启两步验证后，在陌生的设备上登录 Google 账号（包括 Google 自家的各种应用，例如邮件、YouTube 等）需要验证码的二次验证，当然，如果把设备设置为可信任的设备，则不需要每次都重复输入验证码。</p><p>开启的方式非常简单，登录 Google 账号，在”登录与安全 “中有” 两步验证“的开启选项，选择自己需要的方式，继续即可。</p><p>启两步验证 1<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdpircndxj21hc0q2ac6.jpg" alt="开启两步验证 1" title="开启两步验证 1"></p><p>启两步验证 2<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdpjdxg23j21hc0q20u8.jpg" alt="开启两步验证 2" title="开启两步验证 2"></p><p>如果使用”身份验证器 “的方式，还需要在手机上安装一个” 身份验证器 “应用，校准时间后，每隔 30 秒更新验证码，登录账号时需要使用当前的验证码，并且在有效期内完成登录的操作，否则验证码过期，需要使用新的验证码，类似于手机收到的验证码只有 1 分钟一样。同时，如果使用 Google 邮箱账号注册了其它平台的账号，例如注册了 Twitter，注册了 Facebook，为了安全起见也可以使用” 身份验证器“的方式，一种验证方式管理着多种账号的安全。</p><h1 id="开启两步验证后带来的问题"><a href="# 开启两步验证后带来的问题" class="headerlink" title="开启两步验证后带来的问题"></a>开启两步验证后带来的问题 </h1><p> 我遇到的问题之一就是自己手机的邮件客户端无法登录 Google 邮箱了，我使用的时第三方邮件客户端，总是提示我密码错误，其实密码没有错误，是因为 Google 账号开启两步验证后，邮箱的登录也需要对应方式的验证，但是第三方邮件应用并没有做这个验证，所以无法登录。</p><p>本来是想着单独把 Google 邮箱的两步验证关闭，但是找了半天设置选项也没有找到，看来 Google 账号已经是一个大统一的账号，不允许单独设置涉及安全性的信息，可以理解。</p><p>同理，使用其它应用客户端也会遇到相同的问题，当然，Google 官方解释说明也解释了有部分设备不需要关注这个问题，其它大部分设备或者应用还是要受到影响的。</p><p>见：<a href="https://support.google.com/mail/answer/185833?hl=zh-Hans&amp;visit_id=636782289170925112-3791602481&amp;rd=1" target="_blank" rel="noopener">使用应用专用密码登录 </a><br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdpwpmmroj20ru0oimyf.jpg" alt="解释说明" title="解释说明"></p><p> 此时，需要使用”应用专用密码 “或者在手机上开发一个” 具有账号访问权限的应用“用来代理整个 Google 的账号访问。</p><h1 id="问题的解决方法"><a href="# 问题的解决方法" class="headerlink" title="问题的解决方法"></a>问题的解决方法 </h1><h2 id="应用专用密码方式的使用"><a href="# 应用专用密码方式的使用" class="headerlink" title="应用专用密码方式的使用"></a> 应用专用密码方式的使用 </h2><h3 id="1、在 -Google- 账号的登录和安全中，可以找到”应用专用密码“这个选项："><a href="#1、在 -Google- 账号的登录和安全中，可以找到”应用专用密码“这个选项：" class="headerlink" title="1、在 Google 账号的登录和安全中，可以找到”应用专用密码“这个选项："></a>1、在 Google 账号的登录和安全中，可以找到”应用专用密码“这个选项：</h3><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdq2531orj21hc0q2wgl.jpg" alt="应用专用密码" title="应用专用密码"></p><h3 id="2、点击进入后，可以看到选择应用与选择设备，由于我使用的是一种不知名的 -Android- 手机，所以官方选项中没有可以选择的，只好自定义一种，随便起一个名字标识即可。"><a href="#2、点击进入后，可以看到选择应用与选择设备，由于我使用的是一种不知名的 -Android- 手机，所以官方选项中没有可以选择的，只好自定义一种，随便起一个名字标识即可。" class="headerlink" title="2、点击进入后，可以看到选择应用与选择设备，由于我使用的是一种不知名的 Android 手机，所以官方选项中没有可以选择的，只好自定义一种，随便起一个名字标识即可。"></a>2、点击进入后，可以看到选择应用与选择设备，由于我使用的是一种不知名的 Android 手机，所以官方选项中没有可以选择的，只好自定义一种，随便起一个名字标识即可。</h3><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdq4j220pj21hc0q2wfb.jpg" alt="应用设备选择" title="应用设备选择"></p><h3 id="3、选择完成后，会生成一串 -16- 位的密码，这个密码就可以在其它设备上登录的时候使用，不需要使用原来的密码，也不需要使用 -Google- 验证码。"><a href="#3、选择完成后，会生成一串 -16- 位的密码，这个密码就可以在其它设备上登录的时候使用，不需要使用原来的密码，也不需要使用 -Google- 验证码。" class="headerlink" title="3、选择完成后，会生成一串 16 位的密码，这个密码就可以在其它设备上登录的时候使用，不需要使用原来的密码，也不需要使用 Google 验证码。"></a>3、选择完成后，会生成一串 16 位的密码，这个密码就可以在其它设备上登录的时候使用，不需要使用原来的密码，也不需要使用 Google 验证码。</h3><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdq6klijxj21hc0q2ta4.jpg" alt="生成专用密码" title="生成专用密码"></p><h3 id="4、在使用过程中还可以看到设备的情况。"><a href="#4、在使用过程中还可以看到设备的情况。" class="headerlink" title="4、在使用过程中还可以看到设备的情况。"></a>4、在使用过程中还可以看到设备的情况。</h3><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdqasrztdj21hc0q20ud.jpg" alt="设备活动和安全事件" title="设备活动和安全事件"></p><h2 id="具有账号访问权限的应用的使用"><a href="# 具有账号访问权限的应用的使用" class="headerlink" title="具有账号访问权限的应用的使用"></a> 具有账号访问权限的应用的使用 </h2><p> 这种方式就是手机本身有一个后台应用，代理了 Google 账号的一切请求，把信息转发到本地应用（比如 Chrome 浏览器就是这样一个应用，只不过是官方开发的，只要登录了 Google 账号，邮件、YouTube、搜索、Play、相册、日历等等这些应用同步一起使用，不需要额外再登录，这也是我使用 Chrome 浏览器的原因。），所以后台应用如果知道了 Google 账号的用户名、密码，就可以代理所有 Google 应用的请求，无需关心 应用专用密码了。</p><p>我发现锤子手机的 Smartisan OS 系统（v6.0.3，Android 版本 7.1.1）对邮件就做了这个后台应用 Smartisan Mail，所以在使用内置的邮件客户端时，即使开启了两步验证，也无需关心验证码的问题（第一次登录还是需要验证的）。</p><p>下面截图则是一步一步设置：</p><h3 id="1、在邮件客户端设置中添加 -Google- 邮箱"><a href="#1、在邮件客户端设置中添加 -Google- 邮箱" class="headerlink" title="1、在邮件客户端设置中添加 Google 邮箱"></a>1、在邮件客户端设置中添加 Google 邮箱</h3><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdqs7cpoqj20u01meq6k.jpg" alt="添加 Google 邮箱 1" title="添加 Google 邮箱 1"></p><h3 id="2、输入 -Google- 账号密码（也是邮箱密码）"><a href="#2、输入 -Google- 账号密码（也是邮箱密码）" class="headerlink" title="2、输入 Google 账号密码（也是邮箱密码）"></a>2、输入 Google 账号密码（也是邮箱密码）</h3><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdqt5xsawj20u01mf0vr.jpg" alt="添加 Google 邮箱 2" title="添加 Google 邮箱 2"></p><h3 id="3、输入验证码（由于开启了两步验证，一定需要），此时切记勾选”在此计算机上不再询问“，才能保证邮件客户端正常收发 -Goole- 邮件，否则不行。"><a href="#3、输入验证码（由于开启了两步验证，一定需要），此时切记勾选”在此计算机上不再询问“，才能保证邮件客户端正常收发 -Goole- 邮件，否则不行。" class="headerlink" title="3、输入验证码（由于开启了两步验证，一定需要），此时切记勾选”在此计算机上不再询问“，才能保证邮件客户端正常收发 Goole 邮件，否则不行。"></a>3、输入验证码（由于开启了两步验证，一定需要），此时切记勾选”在此计算机上不再询问“，才能保证邮件客户端正常收发 Goole 邮件，否则不行。</h3><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdqto569aj20u01mcjvf.jpg" alt="添加 Google 邮箱 3" title="添加 Google 邮箱 3"></p><h3 id="4、允许，可以看到 -Smartisan-Mail- 想要访问 -Google- 账号"><a href="#4、允许，可以看到 -Smartisan-Mail- 想要访问 -Google- 账号" class="headerlink" title="4、允许，可以看到 Smartisan Mail 想要访问 Google 账号"></a>4、允许，可以看到 Smartisan Mail 想要访问 Google 账号</h3><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdqtv52cej20u01mejz8.jpg" alt="添加 Google 邮箱 4" title="添加 Google 邮箱 4"></p><h3 id="5、点开 -Smartisan-Mail，可以看到开发者信息，里面其实设置了代理转发"><a href="#5、点开 -Smartisan-Mail，可以看到开发者信息，里面其实设置了代理转发" class="headerlink" title="5、点开 Smartisan Mail，可以看到开发者信息，里面其实设置了代理转发"></a>5、点开 Smartisan Mail，可以看到开发者信息，里面其实设置了代理转发</h3><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdqtysi1cj20u01matef.jpg" alt="添加 Google 邮箱 5" title="添加 Google 邮箱 5"></p><h3 id="6、此外，在登录成功后，在 -Google- 账号的登录和安全中，可以看到具有账号访问权限的应用："><a href="#6、此外，在登录成功后，在 -Google- 账号的登录和安全中，可以看到具有账号访问权限的应用：" class="headerlink" title="6、此外，在登录成功后，在 Google 账号的登录和安全中，可以看到具有账号访问权限的应用："></a>6、此外，在登录成功后，在 Google 账号的登录和安全中，可以看到具有账号访问权限的应用：</h3><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxdqoifycuj21hc0q2myw.jpg" alt="Smartisan Mail" title="Smartisan Mail"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;使用 Google 账号的都知道，带来了很多方便，不仅有强大的免费搜索服务，还有 Google 文档、云主机、云存储等各种服务，但是唯一的缺点是需要翻墙，让一些人望而却步，把很多人挡在了便利门外。本文是针对已经实现翻墙愿望，并在日常工作中会使用到 Google 账号的人，说不定可以给你带来一些冷知识，解决一些小问题。&lt;/p&gt;
    
    </summary>
    
      <category term="知识改变生活" scheme="https://www.playpi.org/categories/%E7%9F%A5%E8%AF%86%E6%94%B9%E5%8F%98%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="Google 账号" scheme="https://www.playpi.org/tags/Google-%E8%B4%A6%E5%8F%B7/"/>
    
      <category term="两步验证" scheme="https://www.playpi.org/tags/%E4%B8%A4%E6%AD%A5%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>使用 Vultr 搭建 Shadowsocks（VPS 搭建 SS）</title>
    <link href="https://www.playpi.org/2018111601.html"/>
    <id>https://www.playpi.org/2018111601.html</id>
    <published>2018-11-16T11:25:52.000Z</published>
    <updated>2018-11-16T11:25:52.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --><p>本文讲述通过 Vultr 云主机搭建 Shadowsocks 的过程，非常不详细。当然，关于云主机很多 VPS 都可以选择，根据价格、配置、地区等可以自由选择。</p><a id="more"></a><h1 id="主机购买"><a href="# 主机购买" class="headerlink" title="主机购买"></a>主机购买 </h1><p> 使用 Vultr 的云主机，选择洛杉矶地区的或者日本的，我的推广链接：<a href="https://www.vultr.com/?ref=7443790" target="_blank" rel="noopener">我的推广链接 </a>，官网：<a href="https://my.vultr.com" target="_blank" rel="noopener">Vultr</a>。</p><p> 价格有 &#36;2.5 / 月（只有 IP6 地址）、&#36;3.5 / 月、&#36;5 / 月等等，更贵的也有，一般选择这三个中的一个就够用了，但是要注意便宜的经常售罄，而且最便宜的只支持 IP6，慎用。</p><h1 id="Shadowsocks- 服务安装"><a href="#Shadowsocks- 服务安装" class="headerlink" title="Shadowsocks 服务安装"></a>Shadowsocks 服务安装 </h1><p> 云主机选择 CentOS 7 x64 版本，全程操作使用 Linux 命令（注意，如果选择其它系统命令会不一致，请自己查询，例如：Debian/Ubuntu 系统的安装命令更简洁，先 apt-get install python-pip，再 pip install shadowsocks 即可）。</p><p>注意如果安装了防火墙（更安全），需要的端口一定要开启，否则启动 Shandowsocks 会失败。</p><p>安装组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install m2crypto python-setuptools</span><br><span class="line">easy_install pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><p>过程如图：</p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxa31ivc8mj21hc0mhdh5.jpg" alt="python-setuptools 安装" title="python-setuptools 安装"></p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxa3g9phq7j21hc0jb405.jpg" alt="pip 安装" title="pip 安装"></p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxa3h3eeyaj210k04edfx.jpg" alt="ss 安装" title="ss 安装"></p><p>配置服务器参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><p>如下列出主要参数解释说明 </p><table><thead><tr><th style="text-align:center"> 参数名称 </th><th style="text-align:center"> 解释说明 </th></tr></thead><tbody><tr><td style="text-align:center">server</td><td style="text-align:center"> 服务器地址，填 ip 或域名 </td></tr><tr><td style="text-align:center">local_address</td><td style="text-align:center"> 本地地址 </td></tr><tr><td style="text-align:center">local_port</td><td style="text-align:center"> 本地端口，一般 1080，可任意 </td></tr><tr><td style="text-align:center">server_port</td><td style="text-align:center"> 服务器对外开的端口 </td></tr><tr><td style="text-align:center">password</td><td style="text-align:center"> 密码，每个端口可以设置不同的密码 </td></tr><tr><td style="text-align:center">port_password</td><td style="text-align:center">server_port + password ，服务器端口加密码的组合</td></tr><tr><td style="text-align:center">timeout</td><td style="text-align:center"> 超时重连 </td></tr><tr><td style="text-align:center">method</td><td style="text-align:center"> 加密方法，默认：“aes-256-cfb”</td></tr><tr><td style="text-align:center">fast_open</td><td style="text-align:center">开启或关闭 <a href="https://github.com/shadowsocks/shadowsocks/wiki/TCP-Fast-Open" target="_blank" rel="noopener">TCP_FASTOPEN</a>，填 true / false，需要服务端支持 </td></tr></tbody></table><p> 配置多端口信息（多个帐号，多人也可用）：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"你的 IP 地址"</span>（例如：<span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span>）,</span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>（默认值）,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>（默认值）,</span><br><span class="line">    "port_password"（开启的端口和密码，自己按需配置，确保端口打开并不被其它程序占用）: &#123;</span><br><span class="line">        "1227": "pengfeivpn1227",</span><br><span class="line">        "1226": "pengfeivpn1226",</span><br><span class="line">        "1225": "pengfeivpn"</span><br><span class="line">    &#125;,</span><br><span class="line">    "timeout":300（超时时间，默认值）,</span><br><span class="line">    "method":"aes-256-cfb"（加密方法，默认值）,</span><br><span class="line">    "fast_open": false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置多端口信息（纯净版本，更改 ip、端口等信息直接复制使用）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"x.x.x.x"</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"port_password"</span>: &#123;</span><br><span class="line">        <span class="attr">"1227"</span>: <span class="string">"vpn1227"</span>,</span><br><span class="line">        <span class="attr">"1226"</span>: <span class="string">"vpn1226"</span>,</span><br><span class="line">        <span class="attr">"1225"</span>: <span class="string">"vpn"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置一个端口信息（只有一个帐号，多人也可用）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"你的 IP 地址"</span>（例如：<span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span>）,  </span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">1225</span>（唯一的端口）,</span><br><span class="line">    <span class="attr">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"pengfeivpn"</span>（唯一的密码）,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>:<span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置一个端口信息（纯净版本，更改 ip、端口等信息直接复制使用）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"x.x.x.x"</span>,  </span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">1225</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"vpn"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>:<span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Shadowsocks 性能优化：</p><p>另外还有很多参数可以优化性能，例如设置连接数、字节大小等，比较复杂，在此略过。</p><p>防火墙安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装防火墙 </span></span><br><span class="line">yum install firewalld</span><br><span class="line"><span class="comment"># 启动防火墙 </span></span><br><span class="line">systemctl start firewalld</span><br><span class="line"><span class="comment"># 端口号是你自己设置的端口 </span></span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=1225/tcp</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=1226/tcp</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=1227/tcp</span><br><span class="line"><span class="comment"># 重载更新的端口信息 </span></span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>过程如图：</p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxa3il37mlj20ka074dfy.jpg" alt="安装启动防火墙" title="安装启动防火墙"></p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxa3hxmaftj20jd04zmx6.jpg" alt="开启端口重载" title="开启端口重载"></p><p>启动 Shadowsocks：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后台运行    </span></span><br><span class="line">ssserver -c /etc/shadowsocks.json -d start</span><br><span class="line"><span class="comment"># 调试时使用下面命令，实时查看日志 </span></span><br><span class="line">ssserver -c /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><p>过程如图：</p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxa3j16ymwj20hf03eglj.jpg" alt="启动 ss" title="启动 ss"></p><h1 id="客户端使用"><a href="# 客户端使用" class="headerlink" title="客户端使用"></a>客户端使用 </h1><h2 id="Windows- 平台使用"><a href="#Windows- 平台使用" class="headerlink" title="Windows 平台使用"></a>Windows 平台使用</h2><p> 下载 Windows 平台的客户端，下载地址：<a href="https://github.com/shadowsocks/shadowsocks-windows" target="_blank" rel="noopener">shadowsocks-windows GitHub</a>，<a href="http://shadowsocks.org/en/download/clients.html" target="_blank" rel="noopener">shadowsocks 官网 </a>，直接解压放入文件夹即可使用，不需要安装。</p><p> 但是注意配置内容（端口、密码、加密协议等等），另外注意有些 Windows 系统缺失 Shadowsocks 必要的组件（.NET Framework），需要安装，官网也有说明。</p><p>配置示例：</p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxa3pjtymuj20g60dp75k.jpg" alt="ss 配置" title="ss 配置"></p><p>实际上下载程序后，无需安装，直接解压即可，解压后只有一个 exe 文件，双击即可运行（最好放入指定文件夹中，便于程序管理和升级）。第一次启动，需要设置参数，如上图所示，至少配置一台机器，另外还可以设置开机启动，以后不用重新打开。此外，如果有更新版本的程序，会放在 ss_win_temp 文件夹下，直接解压后复制替换掉当前的 exe 文件即可；如果文件夹中有 gui-config.json、statistics-config.json 这 2 个文本文件，它们是程序的配置以及前面设置的翻墙配置，不能删掉；如果使用系统代理的 PAC 模式（推荐使用），会生成 pac.txt 文本文件，存放从 GFWList 获取的被墙的网址，必要时才会通过翻墙代理访问，其它正常的网址则直接访问，这样可以节约流量。</p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3ly1fxbhx6e12jj20h004qgln.jpg" alt="ss 文件夹" title="ss 文件夹"></p><p>如果有切换代理的需求，搭配浏览器的插件来完成，例如 <a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=zh-CN" target="_blank" rel="noopener">Proxy SwitchyOmega</a> 就可以。</p><p>关于启动系统代理并使用 PAC 模式（根据条件过滤，不满足的直连），如果是入门级别使用，直接设置完就可以用了，不用再管其它设置，切记要定时更新 GFWList 列表，因为如果某些网站最近刚刚被屏蔽，不在以前的 HFWList 列表里面，就会导致无法连接，只有及时更新才能正常连接。但是还有一种极端情况，就是某些网站 GFWList 迟迟没有收录，怎么更新都不会起作用，别着急，此时可以使用用户自定义规则，模仿 GFWList 填写自己的过滤规则，即可实现灵活的切换，使用用户自定义规则后会在安装文件夹中生成 user-rule.txt 文本文件。</p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxbo5moanxj20cj0a5dga.jpg" alt="开启系统代理并使用 PAC 模式" title="开启系统代理并使用 PAC 模式"></p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxbo6rej96j20ip0axjs7.jpg" alt="PAC 模式下更新 GFWList 内容" title="PAC 模式下更新 GFWList 内容"></p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxbo7ifow9j20j80apt9k.jpg" alt="PAC 模式下自定义过滤规则" title="PAC 模式下自定义过滤规则"></p><p>其实，PAC 模式的原理就是根据公共的过滤规则（收集被屏蔽的网站列表），自动生成了一个脚本文件，把脚本文件绑定到浏览器的代理设置中，使浏览器访问网站前都会运行这个脚本，根据脚本的结果决定是直接访问还是通过本地代理访问，脚本在 Shadowsocks 的 PAC 设置中可以看到，浏览器的设置信息可以在代理设置中看到（浏览器在 Shadowsocks 开启系统代理的时候会自动设置代理，无需人工干预）。由此可以得知，通过本机访问网络，决定是直接连接还是通过 Shadowsocks 代理连接的是 PAC 脚本，并不是 Shadowsocks 本身，所以如果使用系统的 Ping 命令访问 <a href="http://www.google.com" target="_blank" rel="noopener">www.google.com</a> 仍然是不能访问的，因为直接 Ping 没有经过 PAC 脚本，还是直接连接了，不可能访问成功。除了浏览器之外，如果其它程序也想访问被屏蔽的网站（例如 Git、Maven 仓库），只能通过程序自己的代理设置进行配置，完成访问的目的。（如果放弃 PAC 模式，直接使用全局模式，则不需要配置任何信息，本机所有的网络请求会全部经过翻墙代理，当然这样做会导致流量消耗过大，并且国内的正常网站访问速度也会很慢）</p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxbof33m9dj20ij0aa0tl.jpg" alt="获取 PAC 的脚本地址" title="获取 PAC 的脚本地址"></p><p>获取到的 PAC 脚本地址为：<br><a href="http://127.0.0.1:1080/pac?t=20181118030355597&amp;secret=qZKsW49fDFezR4jJQtRDhUVPRqnFu6JC3Nc+vtXDb0g=" target="_blank" rel="noopener">http://127.0.0.1:1080/pac?t=20181118030355597&amp;secret=qZKsW49fDFezR4jJQtRDhUVPRqnFu6JC3Nc+vtXDb0g=</a></p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxboiacqtbj20se0kojse.jpg" alt="浏览器代理配置" title="浏览器代理配置"></p><p>以上是查看 Chrome 浏览器和 IE 浏览器的代理设置信息，对于 Microsoft Edge（Windows 10 自带）浏览器来说，界面有点不一样，在设置 -&gt; 高级 -&gt; 代理设置里面。</p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxbooa2ikvj20xc0pwq93.jpg" alt="Edge 浏览器设置代理脚本" title="Edge 浏览器设置代理脚本"></p><p>此外，如果在浏览器中有更灵活的需求应用， 例如在设置多个代理的情况下，针对公司内网是一套，针对指定的几个网站是一套，针对被屏蔽的网站是一套，剩余的直接连接。在这种情况下仅仅使用代理脚本就不能完成需求了，显得场景很单一，当然也可以把脚本写的复杂一点，但是成本太高，而且不方便维护更新。这个时候就需要浏览器的插件出场了，例如在 Chrome 下我选择了 <a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=zh-CN" target="_blank" rel="noopener">SwitchyOmega</a> 这个插件，可以设置多种情景模式，根据实际情况自由切换，非常方便。我设置了三种情景模式：hdpProxy（公司内网）、shadowSocks（翻墙代理）、auto switch（根据条件自动切换），前面两种情景模式直接设置完成即可，最后的 auto switch 需要配置得复杂一点，根据正则表达式或者通配符指定某些网站的访问方式必须使用 hdpProxy 代理，另外其它的根据规则列表 <br>（<a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" target="_blank" rel="noopener">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a> ，和 Shadowsocks 的 GFWList 列表类似）必须通过翻墙代理，剩余的才是直接连接。当然，此时就不需要把 Shadowsocks 设置为系统代理了，保持 Shadowsocks 后台运行就可以了。</p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxbp79ywuej21hc0q20v7.jpg" alt="SwitchyOmega 插件配置" title="SwitchyOmega 插件配置"></p><h2 id="Android- 平台使用"><a href="#Android- 平台使用" class="headerlink" title="Android 平台使用"></a>Android 平台使用</h2><p> 下载 Android 平台的客户端，下载地址：<a href="http://shadowsocks.org/en/download/clients.html" target="_blank" rel="noopener">shadowsocks 官网 </a>。</p><h1 id="踩坑记录"><a href="# 踩坑记录" class="headerlink" title="踩坑记录"></a> 踩坑记录 </h1><p>1、在云主机安装服务端后，又安装了防火墙，但是没有开启 Shadowsocks 需要的端口，导致启动 Shadowsocks 总是失败，但是报错信息又是 Python 和 Linux 的，看不懂，搜索资料也搜不到，后来重装，并且想清楚每一步骤是干什么的，会造成什么影响，通过排除法找到了根本原因。</p><p>2、在 Windows 平台使用的时候，安装了客户端，也安装了 .NET Framework 组件，配置信息确认无误，但是就是上不了外网，同样的操作使用 Android 客户端却可以，所以有理由怀疑是自己的主机问题。后来，重启系统，检查网络，关闭杀毒软件，还是不行，后来，依靠搜索，找到了是杀毒软件 Avast 的问题，扫描 SSL 连接被开启了，大坑，关闭即可。</p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxa0mkrws7j20pc0nkglz.jpg" alt="Avast 截图"></p><p>3、参考：<a href="https://github.com/sirzdy/shadowsocks" target="_blank" rel="noopener"> 梯子搭建</a></p><p>4、本来以为 Shadowsocks 的系统代理中的 PAC 模式会在接收到网络请求的基础上进行过滤，即 Shadowsocks 能控制所有的网络请求进行过滤判断，然后该翻墙的翻墙，该直连的直连，后来发现不是的，浏览器插件 SwitchyOmega 设置代理规则后，PAC 脚本就不会生效了，全部使用 Shadowsocks 代理的网站都直接翻墙，不会有任何判断了，导致优酷视频消耗了大量的流量，而且速度还很慢。另外，为了保证国内的网站不是经过翻墙代理，能直接连接，就不能使用全局模式。</p><p>5、使用插件 SwitchyOmega 的过程中，一开始是自己整理一些规则，而没有使用<br><a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" target="_blank" rel="noopener">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a> 列表规则，导致配置信息很多，而且自己看着头都大，不好维护与查看，后来就发现了列表规则，解放了劳动力。</p><p>6、解决了 Chrome 浏览器的收藏跨平台自动更新同步的问题，以前在三台电脑之间添加取消收藏，总是不能更新同步，需要手动开启系统代理设置全局模式（Chrome 浏览器的收藏同步功能被屏蔽了，我又不知道 url 是什么），等一会更新同步之后再关闭（防止其它场景也翻墙了）。目前使用规则列表，收藏可以自动更新同步了，不需要手动来回切换了，也不用担忘记同步的情况了。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;本文讲述通过 Vultr 云主机搭建 Shadowsocks 的过程，非常不详细。当然，关于云主机很多 VPS 都可以选择，根据价格、配置、地区等可以自由选择。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Shadowsocks" scheme="https://www.playpi.org/tags/Shadowsocks/"/>
    
      <category term="Vultr" scheme="https://www.playpi.org/tags/Vultr/"/>
    
      <category term="Avast" scheme="https://www.playpi.org/tags/Avast/"/>
    
      <category term="VPS" scheme="https://www.playpi.org/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>Aria2 Web 管理面板使用</title>
    <link href="https://www.playpi.org/2018110902.html"/>
    <id>https://www.playpi.org/2018110902.html</id>
    <published>2018-11-08T17:44:11.000Z</published>
    <updated>2018-11-08T17:44:11.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --><p> 浏览器默认下载器下载百度云的文件速度大多不理想，非客户端下载限速，大文件下载中途失败，让人体验非常不友好。</p><a id="more"></a><p> 哈哈哈哈 </p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;浏览器默认下载器下载百度云的文件速度大多不理想，非客户端下载限速，大文件下载中途失败，让人体验非常不友好。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用 Aria2 加速百度网盘下载</title>
    <link href="https://www.playpi.org/2018110901.html"/>
    <id>https://www.playpi.org/2018110901.html</id>
    <published>2018-11-08T17:37:18.000Z</published>
    <updated>2018-11-08T17:37:18.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --><p>在日常工作和生活当中，应该有不少人自愿或者被迫使用百度网盘，一是因为其它厂商基本都关停了网盘服务；二是在获取互联网资料的时候，基本都是先获取到百度网盘链接，然后自己再去下载；三是有时候想备份一些文件，也只能想起来有百度网盘可以使用。这样的话，慢慢地总是会碰到需要百度网盘的时候，我们暂且不考虑这家企业的口碑怎么样，百度网盘这个产品本身还是不错的：有免费的大量空间，使用人群多，分享获取资料方便。但是，产品让人诟病的地方也有几个，而且由此造成的用户体验非常差，大家骂声一片。本文就详细讲述百度网盘这个产品让人诟病的地方以及可以使用技术方式绕过它，从而提升自己的体验。当然，如果你的钱到位的话，直接充值会员吧，可以消除一切不好的使用体验，同时也免去了阅读本文的时间。</p><a id="more"></a><h1 id="使用中遇到的问题"><a href="# 使用中遇到的问题" class="headerlink" title="使用中遇到的问题"></a>使用中遇到的问题 </h1><p> 本文是针对不充会员的免费用户群体的，在 Windows 平台安装，在 Chrome 浏览器中使用。</p><h2 id="下载速度太慢，慢到反人类"><a href="# 下载速度太慢，慢到反人类" class="headerlink" title="下载速度太慢，慢到反人类"></a>下载速度太慢，慢到反人类 </h2><p> 让人诟病的问题之一是下载速度太慢了，对于免费用户基本维持在几 KB/s 到十几 KB/s 之间，也就是说如果你想下载一部 1 G 大小的电影，按照 1000 M 计算，下载速度按照 10 KB/s 算（取这样的数值方便后续计算），下载完需要 1000 个 100 秒，也就是约等于 27.78 个小时（10 万秒），所以在下载列表中经常看到下载任务还需要大于一天才能完成，这怎么让人受得了，不骂才怪呢！</p><p>但是只要充值会员，下载速度基本就暴增，可以完全利用宽带的带宽，例如 100 M 的宽带，下载速度可达 12.8 MB/s，哪怕只是 10 M 的宽带，下载速度也能到 1.28 MB/s。因此，百度网盘客户端对于免费用户限制速度限制得太严重了，不充值会员根本没法使用。而且，有时候勉强能使用的时候，经常会弹出会员试用 300 秒的提示，只要选择了，下载速度立马飞速提升，300 秒后又急速下降，经常下降到只有 3.14 KB/s，让人抓狂。</p><h2 id="网页版限制下载大文件，强迫安装百度网盘客户端"><a href="# 网页版限制下载大文件，强迫安装百度网盘客户端" class="headerlink" title="网页版限制下载大文件，强迫安装百度网盘客户端"></a>网页版限制下载大文件，强迫安装百度网盘客户端 </h2><p> 既然百度网盘客户端做了下载速度限制，那么大多数人会想到选择使用浏览器直接下载，同时又可以免去安装百度网盘客户端的麻烦，浏览器的下载速度通常在几百 KB/s，不会像百度网盘客户端那样特别地慢。但是，直接使用网页版的百度网盘下载文件，对文件大小有限制，太大的文件会被网页拦截，下载不了，而是弹出安装百度网盘客户端的提示，这样又回到了原点，因为如果用百度网盘客户端下载速度被限制了。</p><h1 id="解决问题"><a href="# 解决问题" class="headerlink" title="解决问题"></a>解决问题 </h1><h2 id="使用 -aria2- 突破线程数限制、下载速度限制"><a href="# 使用 -aria2- 突破线程数限制、下载速度限制" class="headerlink" title="使用 aria2 突破线程数限制、下载速度限制"></a> 使用 aria2 突破线程数限制、下载速度限制 </h2><h3 id="简介"><a href="# 简介" class="headerlink" title="简介"></a> 简介 </h3><p>Aria2 是一个多平台轻量级的下载工具，支持 Http、Ftp、BitTorrent、Web 资源等多种格式，使用命令行启动任务，更多具体信息查看官网说明：<a href="https://aria2.github.io" target="_blank" rel="noopener">Aria2 介绍</a>。这种工具可以最大程度利用你的网络带宽，实际上你可以自由配置，包括线程数、网络传输速度、RPC 端口、断点续传是否开启等。</p><h3 id="安装"><a href="# 安装" class="headerlink" title="安装"></a> 安装 </h3><p> 去官网下载安装包：<a href="https://github.com/aria2/aria2/releases" target="_blank" rel="noopener">Aria2 安装包 </a>，我的 Widows 系统 64 位，选择对应的安装包下载。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjctk362fj20ih0gdt90.jpg" alt="安装包下载" title="安装包下载"></p><p> 下载完成后，得到一个 zip 格式的文件，其实直接解压即可，不需要安装，解压后会得到一系列文件，为了方便管理，都放在 aria2 文件夹下面，再复制到程序对应的目录。其中，有一个 .exe 文件，就是运行任务时需要的文件。此外，为了方便起见，把 .exe 文件的路径配置到系统的环境变量中去，这样在任何目录都可以执行 aria2 命令了；如果不配置则只能在 aria2 目录中执行相关命令，否则会找不到程序。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjcyfaaw9j20in08kmxd.jpg" alt="解压" title="解压"></p><h3 id="配置"><a href="# 配置" class="headerlink" title="配置"></a>配置 </h3><p>1、如果单纯使用命令行启动下载任务，可以把参数信息直接跟在命令后面，临时生效，也就是参数只对当前下载任务有效。显然，这样做很麻烦，每次都是一长串的命令，而且当任务非常多的时候也无法管理，所以不建议使用这种方式。当然，如果只是测试折腾一下，或者也不经常使用，只是偶尔下载一个东西，还是用这种方式比较简介，不用管其它复杂的配置，不用管插件的安装。</p><p> 单命令行启动任务示例，从电影天堂下载《一出好戏》这部电影。如果下载百度网盘的文件，需要使用 <a href="https://chrome.google.com/webstore/detail/baiduexporter/jgebcefbdjhkhapijgbhkidaegoocbjj?hl=zh-CN" target="_blank" rel="noopener">baiduexporter</a> 插件生成 url，生成方式见后续步骤。<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">aria2c.exe -c -s32 -k32M -x16 -t1 -m0 --<span class="built_in">enable</span>-rpc=<span class="literal">true</span> 下载 url 取值 </span><br><span class="line">-t1 表示的是每隔 1 秒重试一次 </span><br><span class="line">-m0 表示的是重试设置</span><br><span class="line"> 此外，下载 url 中会包含 --header 的信息：User-Agent、Referer、Cookie、url</span><br><span class="line"> 理论上 User-Agent、Referer 应该时固定的，Cookie、url 每次会生成不一样的 </span><br><span class="line">User-Agent: netdisk;5.3.4.5;PC;PC-Windows;5.1.2600;WindowsBaiduYunGuanJia</span><br><span class="line">Referer: http://pan.baidu.com/disk/home<span class="string">"</span></span><br></pre></td></tr></table></figure><p></p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjec4bt6kj20gj0ahgm8.jpg"alt="aria2 命令行参数 "title="aria2 命令行参数 "></p><p>2、如果是后台启动，通过其它管理插件来创建下载任务，则直接使用配置文件，文件名称为 aria2.conf，并在启动 aria2 时指定配置文件的位置。这样做的好处是使用一个配置文件就可以指定常用的参数配置，不用更改，每次下载文件前启动 aria2 即可。</p><p> 配置文件可选项如下，例如下载文件存放位置、是否开启 RPC、是否开启断点续传，具体更为详细的内容请参考文档：<a href="https://aria2.github.io/manual/en/html/index.html"target="_blank"rel="noopener">Aria2 配置信息文档 </a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##'#'开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##</span></span><br><span class="line"><span class="comment">## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##</span></span><br><span class="line"><span class="comment">## 文件保存相关 ##</span></span><br><span class="line"><span class="comment"># 文件的保存路径 (可使用绝对路径或相对路径), 默认: 当前启动位置</span></span><br><span class="line">dir=E:\\aria2download\\</span><br><span class="line"><span class="comment"># 启用磁盘缓存, 0 为禁用缓存, 需 1.16 以上版本, 默认: 16M</span></span><br><span class="line">disk-cache=32M</span><br><span class="line"><span class="comment"># 文件预分配方式, 能有效降低磁盘碎片, 默认: prealloc</span></span><br><span class="line"><span class="comment"># 预分配所需时间: none &lt; falloc &lt; trunc &lt; prealloc</span></span><br><span class="line"><span class="comment"># NTFS 建议使用 falloc</span></span><br><span class="line">file-allocation=none</span><br><span class="line"><span class="comment"># 断点续传</span></span><br><span class="line"><span class="built_in">continue</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 下载连接相关 ##</span></span><br><span class="line"><span class="comment"># 最大同时下载任务数, 运行时可修改, 默认: 5</span></span><br><span class="line">max-concurrent-downloads=32</span><br><span class="line"><span class="comment"># 同一服务器连接数, 添加时可指定, 默认: 1</span></span><br><span class="line">max-connection-per-server=5</span><br><span class="line"><span class="comment"># 最小文件分片大小, 添加时可指定, 取值范围 1M -1024M, 默认: 20M</span></span><br><span class="line"><span class="comment"># 假定 size=10M, 文件为 20MiB 则使用两个来源下载; 文件为 15MiB 则使用一个来源下载</span></span><br><span class="line">min-split-size=16M</span><br><span class="line"><span class="comment"># 单个任务最大线程数, 添加时可指定, 默认: 5</span></span><br><span class="line">split=32</span><br><span class="line"><span class="comment"># 整体下载速度限制, 运行时可修改, 默认: 0</span></span><br><span class="line"><span class="comment">#max-overall-download-limit=0</span></span><br><span class="line"><span class="comment"># 单个任务下载速度限制, 默认: 0</span></span><br><span class="line"><span class="comment">#max-download-limit=0</span></span><br><span class="line"><span class="comment"># 整体上传速度限制, 运行时可修改, 默认: 0</span></span><br><span class="line">max-overall-upload-limit=1M</span><br><span class="line"><span class="comment"># 单个任务上传速度限制, 默认: 0</span></span><br><span class="line"><span class="comment">#max-upload-limit=1000</span></span><br><span class="line"><span class="comment"># 禁用 IPv6, 默认: false</span></span><br><span class="line"><span class="built_in">disable</span>-ipv6=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 进度保存相关 ##</span></span><br><span class="line"><span class="comment"># 从会话文件中读取下载任务</span></span><br><span class="line">input-file=aria2.session</span><br><span class="line"><span class="comment"># 在 Aria2 退出时保存 ` 错误 / 未完成 ` 的下载任务到会话文件</span></span><br><span class="line">save-session=aria2.session</span><br><span class="line"><span class="comment"># 定时保存会话, 0 为退出时才保存, 需 1.16.1 以上版本, 默认: 0</span></span><br><span class="line"><span class="comment">#save-session-interval=60</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## RPC 相关设置 ##</span></span><br><span class="line"><span class="comment"># 启用 RPC, 默认: false</span></span><br><span class="line"><span class="built_in">enable</span>-rpc=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 允许所有来源, 默认: false</span></span><br><span class="line">rpc-allow-origin-all=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 允许非外部访问, 默认: false</span></span><br><span class="line">rpc-listen-all=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span></span><br><span class="line"><span class="comment">#event-poll=select</span></span><br><span class="line"><span class="comment"># RPC 监听端口, 端口被占用时可以修改, 默认: 6800</span></span><br><span class="line"><span class="comment">#rpc-listen-port=6800</span></span><br><span class="line"><span class="comment"># 设置的 RPC 授权令牌, v1.18.4 新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span></span><br><span class="line"><span class="comment">#rpc-secret=mivm.cn</span></span><br><span class="line"><span class="comment"># 设置的 RPC 访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span></span><br><span class="line"><span class="comment">#rpc-user=&lt;USER&gt;</span></span><br><span class="line"><span class="comment"># 设置的 RPC 访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span></span><br><span class="line"><span class="comment">#rpc-passwd=&lt;PASSWD&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## BT/PT 下载相关 ##</span></span><br><span class="line"><span class="comment"># 当下载的是一个种子(以. torrent 结尾) 时, 自动开始 BT 任务, 默认: true</span></span><br><span class="line">follow-torrent=<span class="literal">true</span></span><br><span class="line"><span class="comment"># BT 监听端口, 当端口被屏蔽时使用, 默认: 6881-6999</span></span><br><span class="line">listen-port=51413</span><br><span class="line"><span class="comment"># 单个种子最大连接数, 默认: 55</span></span><br><span class="line"><span class="comment">#bt-max-peers=55</span></span><br><span class="line"><span class="comment"># 打开 DHT 功能, PT 需要禁用, 默认: true</span></span><br><span class="line"><span class="built_in">enable</span>-dht=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 打开 IPv6 DHT 功能, PT 需要禁用</span></span><br><span class="line"><span class="comment">#enable-dht6=false</span></span><br><span class="line"><span class="comment"># DHT 网络监听端口, 默认: 6881-6999</span></span><br><span class="line"><span class="comment">#dht-listen-port=6881-6999</span></span><br><span class="line"><span class="comment"># 本地节点查找, PT 需要禁用, 默认: false</span></span><br><span class="line"><span class="comment">#bt-enable-lpd=true</span></span><br><span class="line"><span class="comment"># 种子交换, PT 需要禁用, 默认: true</span></span><br><span class="line"><span class="built_in">enable</span>-peer-exchange=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 每个种子限速, 对少种的 PT 很有用, 默认: 50K</span></span><br><span class="line"><span class="comment">#bt-request-peer-speed-limit=50K</span></span><br><span class="line"><span class="comment"># 客户端伪装, PT 需要</span></span><br><span class="line">peer-id-prefix=-TR2770-</span><br><span class="line">user-agent=Transmission/2.77</span><br><span class="line"><span class="comment"># 当种子的分享率达到这个数时, 自动停止做种, 0 为一直做种, 默认: 1.0</span></span><br><span class="line">seed-ratio=0.1</span><br><span class="line"><span class="comment"># 强制保存会话, 即使任务已经完成, 默认: false</span></span><br><span class="line"><span class="comment"># 较新的版本开启后会在任务完成后依然保留. aria2 文件</span></span><br><span class="line"><span class="comment">#force-save=false</span></span><br><span class="line"><span class="comment"># BT 校验相关, 默认: true</span></span><br><span class="line"><span class="comment">#bt-hash-check-seed=true</span></span><br><span class="line"><span class="comment"># 继续之前的 BT 任务时, 无需再次校验, 默认: false</span></span><br><span class="line">bt-seed-unverified=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 保存磁力链接元数据为种子文件(.torrent 文件), 默认: false</span></span><br><span class="line"><span class="comment">#bt-save-metadata=true</span></span><br></pre></td></tr></table></figure><p> 配置完成后在启动 aria2 时指定配置文件的位置即可，例如我把 aria.conf 与 aria2c.exe 放在同一个文件夹下，则启动时直接指定 <br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aria2c.exe --conf-path=aria2.conf</span><br></pre></td></tr></table></figure><p></p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjeqk8oznj20l8096aai.jpg"alt="aria2 配置文件 "title="aria2 配置文件 "></p><p> 当然，这样做只是启动了 aria2，并没有开始创建下载任务，不像单个命令行那样简单，直接设置参数就起任务了。接下来还需要浏览器插件的配合，才能保证下载任务的创建与监控，虽然配置步骤麻烦一点，但是使用起来更为方便。</p><p>为了避免启动时还要输入命令行，在 Windows 平台下可以写一个 bat 脚本，每次双击脚本即可，以下脚本内容供参考：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off &amp; title Aria2</span><br><span class="line">aria2c.exe --conf-path=aria2.conf</span><br></pre></td></tr></table></figure><p></p><h3 id=" 使用 "><a href="# 使用 "class="headerlink"title=" 使用 "></a>使用 </h3><p>1、使用命令行启动单个任务无需多做介绍，直接敲下命令行，等待文件下载就行了。如果需要连续下载多个文件，则唯一的做法就是多敲下几个命令，多等待而已。因此，这种方式不适合任务数量多的情况，那这种情况下显然是需要批量下载的，并且可以对下载任务进行管理，那就要看下面的一项了：后台起 aria2 服务。</p><p> 生成下载 url 的过程需要借助 <a href="https://chrome.google.com/webstore/detail/baiduexporter/jgebcefbdjhkhapijgbhkidaegoocbjj?hl=zh-CN"target="_blank"rel="noopener">baiduexporter</a>、<a href="https://chrome.google.com/webstore/detail/yaaw-for-chrome/dennnbdlpgjgbcjfgaohdahloollfgoc?hl=zh-CN"target="_blank"rel="noopener">YAAW for Chrome</a> 插件，直接从 Chrome 浏览器的插件商店搜索安装即可，如果无法翻墙，也可以从离线镜像库下载离线文件进行安装，离线库可以参考本站点的 <a href="https://www.playpi.org/about">关于页面 </a> 给出的工具链接。</p><p> 接下来描述使用方式，登录百度网盘账号，把需要下载的文件保存在自己的网盘中，选择需要下载的文件，然后可以看到本来的下载按钮旁边又多了导出下载按钮，包含几个选项：ARIA2 RPC、文本导出、设置。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjftqq3ugj210w0ejjs0.jpg"alt="Aria2 导出下载 "title="Aria2 导出下载 "></p><p>选择文本导出就会弹出当前下载文件的下载 url，复制粘贴到命令后即可直接下载该资源。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjfx3u157j21200ifmy2.jpg"alt="Aria2 文本导出 "title="Aria2 文本导出 "><br>导出的内容格式如下，当然实际使用的时候里面的参数也是可以更改的，但是下载 url 一定不不能变的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://pcs.baidu.com/rest/2.0/pcs/file?method=download&amp;app_id=250528&amp;path=%2F%E9%80%86%E5%90%91%E8%B5%84%E6%96%99%2FIDA%20Pro%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97.pdf</span><br></pre></td></tr></table></figure><p>2、根据前面的描述，后台起了 aria2 服务，但是还没真正用起来，想要用起来，必须配合两个插件：<a href="https://chrome.google.com/webstore/detail/baiduexporter/jgebcefbdjhkhapijgbhkidaegoocbjj?hl=zh-CN"target="_blank"rel="noopener">baiduexporter</a>、<a href="https://chrome.google.com/webstore/detail/yaaw-for-chrome/dennnbdlpgjgbcjfgaohdahloollfgoc?hl=zh-CN"target="_blank"rel="noopener">YAAW for Chrome</a>。这 2 个插件中前者的作用是获取百度网盘的文件 url，这个 url 当然不是分享文件产生的 url，而是下载文件产生的 url；后者插件的作用是配合前者自动创建下载任务，实际下载利用的是已经启动的 aria2 后台，并时时监控任务状态，提供任务管理界面。</p><p>插件的安装不再赘述，接下来直接描述使用流程，要确保以上两个安装的插件都已经启用。根据上一步骤已经知道导出下载这个按钮，里面包含着一个 ARIA2 RPC 选项，这个选项就是直接使用 后台 aria2 服务创建下载任务，然后 YAAW for Chrome 插件监控着所有下载任务。</p><p>还有一个前提，就是启动 aria2 服务时要开启 RPC 模式。<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启用 RPC, 默认: false</span></span><br><span class="line"><span class="built_in">enable</span>-rpc=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p></p><p>这样做了之后，aria2 后台服务会开启一个端口，一般默认 6800（如果 aria2 更改了端口，YAAW for Chrome 也要做相应的配置），这个端口用来给 YAAW for Chrome 汇报下载任务的情况，并提供管理下载任务的接口，这样的话，直接通过 YAAW for Chrome 就可以通过可视化的方式创建、暂停、查看任务。</p><p>后台启动 aria2，开启 RPC 模式。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjg7ftepxj20gj0ahmxk.jpg"alt=" 后台启动 aria2"title=" 后台启动 aria2"></p><p>打开 YAAW for Chrome 插件查看端口配置信息。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjga6q57mj20y30kyaav.jpg"alt="YAAW 配置 "title="YAAW 配置 "></p><p>通过 baiduexporter 插件，直接选择 PRC 下载，再去 YAAW 界面刷新查看下载任务。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjgepy1l1j21400dcaao.jpg"alt="RPC 下载 "title="RPC 下载 "></p><p>可以看到，aria2 参数还没优化（线程数、分块大小设置），下载速度已经有将近 400 Kb/s 了。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjgfb0g00j21000cnq3b.jpg"alt="YAAW 查看任务 "title="YAAW 查看任务 "></p><h2 id=" 使用油猴插件绕过浏览器下载大文件的限制 "><a href="# 使用油猴插件绕过浏览器下载大文件的限制 "class="headerlink"title=" 使用油猴插件绕过浏览器下载大文件的限制 "></a>使用油猴插件绕过浏览器下载大文件的限制 </h2><h3 id=" 现象 "><a href="# 现象 "class="headerlink"title=" 现象 "></a> 现象 </h3><p> 还是刚才那个文件，文件大小只有 149 M，不想通过百度网盘客户端下载，只想通过网页版下载，那就直接点击下载按钮，发现被限制了，必须让你安装百度网盘客户端。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjglvadsdj212c0hzwff.jpg"alt=" 网页限制大文件 "title=" 网页限制大文件 "></p><p>本来还在想通过网页版直接下载，速度也不会很慢，但是被限制了，这个时候我们的万能插件要出场了：<a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN"target="_blank"rel="noopener">Tampermonkey</a>，又称油猴、暴力猴。</p><h3 id=" 解决方式 "><a href="# 解决方式 "class="headerlink"title=" 解决方式 "></a>解决方式 </h3><p> 使用万能的插件，屏蔽百度网盘网页版原来的网页内容，从而导致百度网盘的限制失效，这个插件就是 Tampermonkey：<a href="https://tampermonkey.net"target="_blank"rel="noopener">官网 </a>、<a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN"target="_blank"rel="noopener">Chrome 浏览器插件商店</a>。</p><p> 这个插件的作用其实就是帮你管理各种自定义脚本，并运用在网页解析渲染中，从而实现对网页内容的改变，例如：去除网页的广告、去除百度搜索内容的广告条目、更改新浪微博展示界面。其中，也包括让百度网盘的下载文件大小限制失效，从而可以自由下载。</p><p>1、好，现在需要在插件的基础上安装一个脚本：百度网盘直接下载助手。要安装这个脚本，则首先需要找到它，选择获取新脚本，会引导我们进入脚本仓库。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjhpp1dbsj20ep0adt94.jpg"alt=" 获取新脚本 "title=" 获取新脚本 "></p><p>2、各种脚本仓库，我们选择 <a href="https://greasyfork.org/zh-CN"target="_blank"rel="noopener">GreasyFork</a>。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjhs41z1sj20zd0q2dhg.jpg"alt=" 脚本仓库列表 "title=" 脚本仓库列表 "></p><p>3、在搜索框中搜索：百度网盘直接下载助手，选择其中一个。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjhuwpvohj20s70q2n18.jpg"alt=" 选择脚本 "title=" 选择脚本 "></p><p>4、安装选择的脚本。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjhwddpjgj20ro0q240i.jpg"alt=" 安装脚本 "title=" 安装脚本 "></p><p>5、可以看到脚本内容，点击安装。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjhyame9cj20xg0q2dht.jpg"alt=" 脚本内容 "title=" 脚本内容 "></p><p>6、安装完成后，选择管理面板可以查看已经安装的脚本以及是否启用，也可以删除或者二次编辑。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxji95kjl0j21hc0693yu.jpg"alt=" 管理面板 "title=" 管理面板 "></p><p>7、回到百度网盘，选择文件，可以看到多了一个下载助手选项，选择 API 下载，下载，即可使用浏览器直接下载，不会因为文件太大有网页的限制。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjidt1sdoj214a0q2ab1.jpg"alt=" 下载助手 "title=" 下载助手 "></p><p>8、当然，如果自己会写脚本，或者从别处直接复制的源脚本代码，在插件中选择添加新脚本，自己编辑即可。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjhte0bjfj20i009yt96.jpg"alt=" 添加新脚本 "title=" 添加新脚本 "><br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxjigww3m8j20k00fv74q.jpg"alt=" 编辑脚本内容 "title=" 编辑脚本内容 "></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;在日常工作和生活当中，应该有不少人自愿或者被迫使用百度网盘，一是因为其它厂商基本都关停了网盘服务；二是在获取互联网资料的时候，基本都是先获取到百度网盘链接，然后自己再去下载；三是有时候想备份一些文件，也只能想起来有百度网盘可以使用。这样的话，慢慢地总是会碰到需要百度网盘的时候，我们暂且不考虑这家企业的口碑怎么样，百度网盘这个产品本身还是不错的：有免费的大量空间，使用人群多，分享获取资料方便。但是，产品让人诟病的地方也有几个，而且由此造成的用户体验非常差，大家骂声一片。本文就详细讲述百度网盘这个产品让人诟病的地方以及可以使用技术方式绕过它，从而提升自己的体验。当然，如果你的钱到位的话，直接充值会员吧，可以消除一切不好的使用体验，同时也免去了阅读本文的时间。&lt;/p&gt;
    
    </summary>
    
      <category term="知识改变生活" scheme="https://www.playpi.org/categories/%E7%9F%A5%E8%AF%86%E6%94%B9%E5%8F%98%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="Aria2" scheme="https://www.playpi.org/tags/Aria2/"/>
    
      <category term="百度网盘" scheme="https://www.playpi.org/tags/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>归来</title>
    <link href="https://www.playpi.org/2018090501.html"/>
    <id>https://www.playpi.org/2018090501.html</id>
    <published>2018-09-04T16:00:00.000Z</published>
    <updated>2018-11-24T17:23:45.959Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --><p>好，整理完成后，重新出发。</p><a id="more"></a><h2 id="二级标题，自动创建锚点和目录"><a href="# 二级标题，自动创建锚点和目录" class="headerlink" title="二级标题，自动创建锚点和目录"></a>二级标题，自动创建锚点和目录 </h2><h3 id="三级标题 - 开始"><a href="# 三级标题 - 开始" class="headerlink" title="三级标题 - 开始"></a> 三级标题 - 开始 </h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="三级标题 - 中间"><a href="# 三级标题 - 中间" class="headerlink" title="三级标题 - 中间"></a> 三级标题 - 中间 </h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="三级标题 - 结束"><a href="# 三级标题 - 结束" class="headerlink" title="三级标题 - 结束"></a> 三级标题 - 结束 </h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="三级标题 - 备注"><a href="# 三级标题 - 备注" class="headerlink" title="三级标题 - 备注"></a> 三级标题 - 备注 </h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h2 id="踩坑记录"><a href="# 踩坑记录" class="headerlink" title="踩坑记录"></a> 踩坑记录 </h2><p> 注意使用 hexo 对 Markdown 文件进行解析时，有一些转义字符是会失败的（使用反斜杠 \ 进行转义的，例如美元符号 &#36;，成对出现有特殊含义，所以需要转义，在 Markdown 中可以使用 \$ 进行转义，但是 hexo 解析完成 html 文件是失败的），所以最好使用编码解决，例如美元符号使用 &amp;#36; 替代。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;好，整理完成后，重新出发。&lt;/p&gt;
    
    </summary>
    
      <category term="基础技术知识" scheme="https://www.playpi.org/categories/basic-technical-knowledge/"/>
    
    
      <category term="建站" scheme="https://www.playpi.org/tags/building/"/>
    
  </entry>
  
  <entry>
    <title>注册 Facebook Twitter Tumblr 遇到的问题</title>
    <link href="https://www.playpi.org/2018020101.html"/>
    <id>https://www.playpi.org/2018020101.html</id>
    <published>2018-02-01T11:25:16.000Z</published>
    <updated>2018-11-20T11:25:16.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --><p>本文讲述注册使用 Facebook、Twitter、Tumblr 等社交账号的过程、遇到的问题、解决的办法，给自己留一个备份，同时也可能给大家带去一丝方便。</p><a id="more"></a><h1 id="Facebook"><a href="#Facebook" class="headerlink" title="Facebook"></a>Facebook</h1><h1 id="Twitter"><a href="#Twitter" class="headerlink" title="Twitter"></a>Twitter</h1><h2 id="注册"><a href="# 注册" class="headerlink" title="注册"></a>注册 </h2><p> 注册 Twitter 帐号，首先需要一个邮箱帐号，或者手机号，进入注册首页，进行信息填写 <a href="https://twitter.com/i/flow/signup" target="_blank" rel="noopener"> 注册页 </a>，填写完成后，接下来也就是常规流程，发送短信验证码、语音验证码、邮箱激活链接等，基本没什么问题。</p><h2 id="绑定手机号问题"><a href="# 绑定手机号问题" class="headerlink" title="绑定手机号问题"></a> 绑定手机号问题 </h2><p> 由于我选择的是 Google 邮箱注册，注册完成之后正常登录，但是进入不到主页面，就被绑定手机号页面拦截了，一直提示需要添加一个手机号，要不然就在当前页面，什么也做不了，除非退出。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxerje8k7wj20p00exglz.jpg" alt="Add a phone number" title="Add a phone number"></p><p>但是呢，诡异的是我使用自己的手机号进行绑定时，提示错误：由于技术问题，无法完成当前的请求，请重试（Due to a technical issue, we couldn’t complete this request. Please try again.），我怀疑是因为中国的手机号无法进行绑定。上网搜索了一下资料，果然是这个原因，大家都建议一开始直接使用手机号注册，不要使用邮箱注册，就不会有这个问题了。接下来没有办法了，只能尝试寻找可行的办法，毕竟邮箱已经注册过了，不想浪费。</p><h2 id="绑定手机号解决方案尝试"><a href="# 绑定手机号解决方案尝试" class="headerlink" title="绑定手机号解决方案尝试"></a>绑定手机号解决方案尝试 </h2><p> 官方说当前帐号疑似是机器人（不是一个真实的人类），所以被冻结了，必须添加一个可用的手机号，用来接收验证码，才能证明当前帐号是人为注册的，才能进行接下来的操作。</p><p>1、利用 Chrome 浏览器的开发者工具更改下拉列表的值，把日本的编号 81 改为 86，应用在页面上，实际操作发现不行，Twitter 验证的时候还会重新刷新下拉列表。在 Chrome 浏览器的对应页面，按下键盘的 F12 按键，就可以打开调试工具（或者点击鼠标的右键，选择检查），在 “Elements” 选项中可以看到源代码，更改表单里面的下拉列表的值，即可。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxertxa23qj21260p6myi.jpg" alt="更改下拉列表内容" title="更改下拉列表内容"></p><p>2、去帮助中心，找客服，发送申诉邮件，说明你是一个真实的人，现在注册帐号被冻结了，<a href="https://help.twitter.com/en" target="_blank" rel="noopener">Twitter 帮助中心 </a>。在帮助中心选择“Contact us”，进一步选择“View all support topics”。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxes1ihmuqj21hc0p6q49.jpg" alt="Contact us" title="Contact us"></p><p> 进入选择页面后，进一步选择 “Suspended or locked account”，对冻结或者锁定的帐号进行申诉处理。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxes4iubaqj212y0p6jsx.jpg" alt="Suspended or locked account" title="Suspended or locked account"></p><p>最终进入的页面就是这样的：<a href="https://help.twitter.com/forms/general?subtopic=suspended" target="_blank" rel="noopener">申诉信息填写 </a>。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxes6m6189j219e0p6gmv.jpg" alt="申诉信息填写" title="申诉信息填写"></p><p> 这里面最主要的内容就是问题描述，请描述清楚你的问题，另外设备的选择按照自己的实际情况填写，全名和手机号也按照实际情况填写。此外，注意填写信息前需要登录帐号，否则页面是锁定状态，无法填写任何信息，而且登录后，大部分信息都是自动填充完成的，无需填写，只需要填写重要的几项内容。</p><p>例如我填写的问题描述：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Account suspended.Could not unsuspend it through phone number.Pls help to unsuspend the account.Thanks.</span><br></pre></td></tr></table></figure><p></p><p>提交后会收到一封由 Twitter 官方技术支持（Twitter Support <a href="mailto:&#115;&#x75;&#112;&#112;&#x6f;&#x72;&#116;&#x40;&#116;&#x77;&#x69;&#116;&#116;&#101;&#114;&#46;&#x63;&#111;&#x6d;" target="_blank" rel="noopener">&#115;&#x75;&#112;&#112;&#x6f;&#x72;&#116;&#x40;&#116;&#x77;&#x69;&#116;&#116;&#101;&#114;&#46;&#x63;&#111;&#x6d;</a>）发送的邮件，告诉你应该怎么做，邮件内容如下。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxesj53y9zj215s0llgn7.jpg" alt="Twitter 技术支持邮件" title="Twitter 技术支持邮件"></p><p>但是看内容也看不出来什么，只是说疑似机器人帐号，需要绑定手机号码，列出一系列步骤。其实我也是想做这一步，但是奈何中国的手机号码不支持。仔细看最后一句话，如果还有问题，可以直接回复此邮件并说明问题详细。</p><p>接下来我又回复了一封邮件，说明遇到的问题，内容大概如下，解释说明自己是一个真实的人，但是由于手机号码是中国的，无法接收到验证码，请求解决：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Hello,</span><br><span class="line">  I try in this way,But i am in China,i can not receive messages.</span><br><span class="line">  I am a human indeed,and my phone number is +86 1********06.</span><br><span class="line">  best wishes.</span><br></pre></td></tr></table></figure><p></p><p><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxeso1yjgrj21870e3my0.jpg" alt="回复邮件" title="回复邮件"></p><p>接下来就是等待官方的回复了（希望晚上睡一觉后明天有好消息）。</p><p>在等待了一夜后，又过了半天时间（总共大概 17 个小时），收到了 Twitter 官方的回复，说我的帐号已经解冻，并解释了原因。这次回复等待了这么长时间，不像上次申诉回复那么快，说明很大可能是人工审核的，然后解冻了你的帐号，再回复这封通知邮件给我。不管怎样，帐号可以使用了。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxfnvviw2gj21dk0n7mzb.jpg" alt="官方解冻邮件回复" title="官方解冻邮件回复"></p><p>接下来为了保证不被封号，最好重新设置一下昵称，并且填写一些必要的信息：用户名（id）、头像、生日、国家、描述等，也可以关注一些其他推主。</p><p>更改用户名在 “Settings and Privacy” 里面，由于用户名是唯一的（和 GitHub 的策略一样），所以常用的都被别人注册过了，自己要注意寻找，否则更改不了，显示被占用。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxfp8312wuj216i0p6gnu.jpg" alt="更改用户名" title="更改用户名"></p><p>更改昵称、头像、背景墙、描述等在 “Profile” 里面。<br><img src="https://ws1.sinaimg.cn/large/b7f2e3a3gy1fxfpeugi9zj218p0p6wi6.jpg" alt="更改基本信息" title="更改基本信息"></p><p>流程总结：<br>1、只针对使用 Google 邮箱注册的情况，注册后帐号被冻结，什么也做不了，绑定手机号又说不支持，只能通过申诉来解决；<br>2、申诉的目的是为了解冻帐号，但是官方是自动回复，让绑定手机号，又回到了原地；<br>3、在步骤 2 的基础上可以直接回复邮件（邮件中有提示），说明遇到的问题，等待将近一天就行了；（如果没有步骤 2，直接给官方技术支持发邮件，不知道行不行）<br>4、步骤 3 官方回复的邮件中，提示说不要回复此邮件。（回复了应该也没人理）</p><h1 id="Tumblr"><a href="#Tumblr" class="headerlink" title="Tumblr"></a>Tumblr</h1><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;本文讲述注册使用 Facebook、Twitter、Tumblr 等社交账号的过程、遇到的问题、解决的办法，给自己留一个备份，同时也可能给大家带去一丝方便。&lt;/p&gt;
    
    </summary>
    
      <category term="知识改变生活" scheme="https://www.playpi.org/categories/%E7%9F%A5%E8%AF%86%E6%94%B9%E5%8F%98%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="Facebook" scheme="https://www.playpi.org/tags/Facebook/"/>
    
      <category term="Twitter" scheme="https://www.playpi.org/tags/Twitter/"/>
    
      <category term="Tumblr" scheme="https://www.playpi.org/tags/Tumblr/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.playpi.org/2017102901.html"/>
    <id>https://www.playpi.org/2017102901.html</id>
    <published>2017-10-28T16:00:00.000Z</published>
    <updated>2018-11-24T17:23:45.959Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="基础技术知识" scheme="https://www.playpi.org/categories/basic-technical-knowledge/"/>
    
    
      <category term="建站" scheme="https://www.playpi.org/tags/building/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop 入门系列 0-- 初识 Hadoop</title>
    <link href="https://www.playpi.org/2017040101.html"/>
    <id>https://www.playpi.org/2017040101.html</id>
    <published>2017-04-01T07:58:54.000Z</published>
    <updated>2018-11-21T07:58:54.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --><p>待开始整理 </p><a id="more"></a><h1 id="开始"><a href="# 开始" class="headerlink" title="开始"></a> 开始 </h1><p> 今天是愚人节。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Nov 25 2018 01:25:15 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;待开始整理&lt;/p&gt;
    
    </summary>
    
      <category term="Hadoop 从零基础到入门系列" scheme="https://www.playpi.org/categories/Hadoop-%E4%BB%8E%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%88%B0%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="Hadoop" scheme="https://www.playpi.org/tags/Hadoop/"/>
    
      <category term="Zookeeper" scheme="https://www.playpi.org/tags/Zookeeper/"/>
    
  </entry>
  
</feed>
